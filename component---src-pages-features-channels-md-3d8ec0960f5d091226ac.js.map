{"version":3,"file":"component---src-pages-features-channels-md-3d8ec0960f5d091226ac.js","mappings":"sNAUsBA,E,yDAFTC,EAAe,GAOtBC,GALgBF,EAKS,WALD,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,+BACA,6CAA+B,aAAGC,WAAW,IACzC,KAAQ,4BADmB,eAA/B,kMAKwB,QAACV,EAAD,CAAUW,GAAG,gDAAgDF,QAAQ,aAL7F,2FAOA,QAACT,EAAD,CAAUW,GAAG,oCAAoCF,QAAQ,aAXpD,8EAaL,yCAA2B,QAACT,EAAD,CAAUW,GAAG,iCAAiCF,QAAQ,aAAjF,uMAGsC,QAACT,EAAD,CAAUW,GAAG,iCAAiCF,QAAQ,aAH5F,MAIA,iCAAmB,aAAGC,WAAW,IAC7B,KAAQ,iCADO,UAAnB,4FAG0D,QAACV,EAAD,CAAUW,GAAG,iCAAiCF,QAAQ,aAHhH,iDAKA,6GACO,QAACT,EAAD,CAAUW,GAAG,iCAAiCF,QAAQ,aAD7D,gKAIA,kCAAoB,QAACT,EAAD,CAAUW,GAAG,iCAAiCF,QAAQ,aAA1E,yDACiD,QAACT,EAAD,CAAUW,GAAG,iCAAiCF,QAAQ,aADvG,iOAKA,gDACA,6BACA,gTAIA,kBAAG,eAAKC,WAAW,IACf,IAAO,mCACP,IAAO,0DAFX,OAIA,oBACA,wCACA,ieAMA,kBAAG,eAAKA,WAAW,IACf,IAAO,oCACP,IAAO,gCAFX,OAGkB,eAAKA,WAAW,IAC9B,IAAO,oCACP,IAAO,iCALX,OAMkB,eAAKA,WAAW,IAC9B,IAAO,mCACP,IAAO,gCARX,OASkB,eAAKA,WAAW,IAC9B,IAAO,oCACP,IAAO,iCACA,cAAIA,WAAW,MAZ1B,yBAcA,4QAIA,ySAIA,4LAGA,mWAKA,kBAAG,eAAKA,WAAW,IACf,IAAO,kCACP,IAAO,oEAFX,OAIA,oBACA,gEACA,8WASJH,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/Features/Channels.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Channels`}</h1>\n    <p>{`Applied Energistics 2's `}<a parentName=\"p\" {...{\n        \"href\": \"../ME-Network/index.html\"\n      }}>{`ME Networks`}</a>{` require\nChannels to support devices which use networked storage, or other network\nservices. Most devices such as standard cables, and machines can only support\nup to 8 channels. However `}<ItemLink id=\"appliedenergistics2:fluix_covered_dense_cable\" mdxType=\"ItemLink\"></ItemLink>{` can support up\nto 32 channels, the only other devices capable of transmitting 32 are`}</p>\n    <ItemLink id=\"appliedenergistics2:me_p2p_tunnel\" mdxType=\"ItemLink\"></ItemLink> and the [Quantum\nNetwork Bridge](../ME-Quantum-Network-Bridge/index.html)\n    <p>{`A Network without a `}<ItemLink id=\"appliedenergistics2:controller\" mdxType=\"ItemLink\"></ItemLink>{`\nis considered to be Ad-Hoc, and can support up to 8 channel using devices.\nOnce you exceed 8 devices the networks channel using devices will shutdown,\nyou can either remove devices, or add a `}<ItemLink id=\"appliedenergistics2:controller\" mdxType=\"ItemLink\"></ItemLink>{`.`}</p>\n    <p>{`While using `}<a parentName=\"p\" {...{\n        \"href\": \"../Ad-Hoc-Networks/index.html\"\n      }}>{`Ad-Hoc`}</a>{` networks each device will\nuse 1 channel network wide, this is very different from how `}<ItemLink id=\"appliedenergistics2:controller\" mdxType=\"ItemLink\"></ItemLink>{` allocate channels based on\nshortest route.`}</p>\n    <p>{`Channels will consume 1‚ÅÑ128 ae/t per node they transverse, this means that by\nadding a `}<ItemLink id=\"appliedenergistics2:controller\" mdxType=\"ItemLink\"></ItemLink>{` for a\nnetwork with 8 devices and over 96 nodes your power usage might actually\ndecrease power consumption because it changes how channels are allocated.`}</p>\n    <p>{`When using a `}<ItemLink id=\"appliedenergistics2:controller\" mdxType=\"ItemLink\"></ItemLink>{`\nChannels must route via the shortest path from the `}<ItemLink id=\"appliedenergistics2:controller\" mdxType=\"ItemLink\"></ItemLink>{` to the device. If the path is\nalready maxed out, some devices may not get their required channels, use\ncolored cables, cable anchors and tunnels to your advantage to make sure your\nchannels go in the path you desire.`}</p>\n    <h2>{`Introduction to Channels:`}</h2>\n    <h2>{`Design`}</h2>\n    <p>{`Designing your layouts with channels can be tricky because of their shortest\nroute nature, if any specific spot in your system has two possible routes, you\nmay find yourself returning home from a mining trip to see half your devices\noffline. Take a look at the following example:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../assets/channels/badLength.png\",\n        \"alt\": \"Diagram showing that two equal length paths are\\nbad.\"\n      }}></img>{`  `}</p>\n    <hr></hr>\n    <p>{`Equal Length Route`}</p>\n    <p>{`In the above image the controller is represented by the Green Block, Cables or\nmachines by green lines. The blue square indicate which Locations only have 1\nroute; this is good, but there is a red block, which indicates that there is\ntwo possible routes, this can be bad, especially if your exceeding 8 channels\non cable, or machines for a specific block of machines. Now that you can\nunderstand that basic issue and diagram look at these other diagrams.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../assets/channels/good_split.png\",\n        \"alt\": \"An example of a good layout\"\n      }}></img>{` | `}<img parentName=\"p\" {...{\n        \"src\": \"../assets/channels/bad_split3.png\",\n        \"alt\": \"An\\nexample of a good layout\"\n      }}></img>{` | `}<img parentName=\"p\" {...{\n        \"src\": \"../assets/channels/bad_split.png\",\n        \"alt\": \"An example of\\na bad layout\"\n      }}></img>{` | `}<img parentName=\"p\" {...{\n        \"src\": \"../assets/channels/bad_split2.png\",\n        \"alt\": \"An example of a bad\\nlayout\"\n      }}></img><br parentName=\"p\"></br>{`\n`}{`---|---|---|---`}</p>\n    <p>{`You can see that depending on how you run your cable, you might end up with\ndifferent possible outcomes in a block of machines, you can also see that\nusing a controller you can ensure that the channels equilibrium is kept from a\nstraight line.`}</p>\n    <p>{`In the second setup you can see that the middle line is red, however its\nimportant to remember that it only matters if that line of machines uses\nchannels, if that line was for instance molecular assemblers, it wouldn't\nmatter, so that could be a valid setup for building.`}</p>\n    <p>{`In the Last two you can see that you might run an extra cable into a block of\nmachines, and it might appear to work, but you can see that it can break quite\neasily.`}</p>\n    <p>{`Now that you understand how this works, I'll leave you with one final piece of\nhelpful information, if you run into a situation where you can't use a\ncontroller, and your design is imbalanced, consider using p2p tunnels, since a\ntunnel connection is considered a single \"hop\" you can get the system to have\na different outcome.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../assets/channels/p2psplit.png\",\n        \"alt\": \"Diagram showing how to fix a previous setup with a p2p\\ntunnel.\"\n      }}></img>{`  `}</p>\n    <hr></hr>\n    <p>{`Using p2p Tunnels to adjust route lengths.`}</p>\n    <p>{`One last important note about this, you can see that the p2p tunnel is\ndirectly on the controller, and directly on the block of machines at the\nbottom of the setup, this is done because the in and out tunnel are both\nconsidered \"a node\", so the two cable from the controller and in and out\ntunnel balance to create the final balanced setup.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","ItemLink","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","id","isMDXComponent"],"sourceRoot":""}