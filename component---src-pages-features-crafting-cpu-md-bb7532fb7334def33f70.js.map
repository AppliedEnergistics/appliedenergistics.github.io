{"version":3,"file":"component---src-pages-features-crafting-cpu-md-bb7532fb7334def33f70.js","mappings":"sNAUsBA,E,yDAFTC,EAAe,GAOtBC,GALgBF,EAKS,WALD,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,mCACA,gHAEA,0BAAY,aAAGC,WAAW,IACtB,KAAQ,8BACR,MAAS,kBAFb,OAIA,oBACA,0BAAY,aAAGA,WAAW,IACtB,KAAQ,4CACR,MAAS,iCAFb,OAIA,oBACA,0BAAY,aAAGA,WAAW,IACtB,KAAQ,oCACR,MAAS,wBAFb,OAIA,oBACA,0BAAY,aAAGA,WAAW,IACtB,KAAQ,oCACR,MAAS,wBAFb,OAIA,oBACA,0BAAY,aAAGA,WAAW,IACtB,KAAQ,qCACR,MAAS,yBAFb,OAIA,oBACA,0BAAY,aAAGA,WAAW,IACtB,KAAQ,qCACR,MAAS,yBAFb,OAIA,oBACA,2BAAa,aAAGA,WAAW,KACvB,KAAQ,iCACR,MAAS,uBAEb,wEACA,mBACE,cAAIA,WAAW,MAAf,gHACA,cAAIA,WAAW,MAAf,wDAEF,0eAOA,uCAAyB,aAAGA,WAAW,IACnC,KAAQ,cADa,gBAAzB,oEAG6B,QAACV,EAAD,CAAUW,GAAG,gCAAgCF,QAAQ,aAHlF,kBAIA,8EAAgE,QAACT,EAAD,CAAUW,GAAG,qCAAqCF,QAAQ,aAA1H,QAAwJ,QAACT,EAAD,CAAUW,GAAG,yCAAyCF,QAAQ,aAAtN,MACA,4CAKJF,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/features/crafting-cpu.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Crafting CPU`}</h1>\n    <p>{`Manages a single auto crafting task from start to finsh, built of various\ncrafting units.`}</p>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"../Crafting-Unit/index.html\",\n        \"title\": \"Crafting Unit\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"../Crafting-Co-Processing-Unit/index.html\",\n        \"title\": \"Crafting Co Processing\\nUnit\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"../1k-Crafting-Storage/index.html\",\n        \"title\": \"1k Crafting Storage\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"../4k-Crafting-Storage/index.html\",\n        \"title\": \"4k Crafting Storage\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"../16k-Crafting-Storage/index.html\",\n        \"title\": \"16k Crafting Storage\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"../64k-Crafting-Storage/index.html\",\n        \"title\": \"64k Crafting Storage\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <h2>{`|  | `}<a parentName=\"h2\" {...{\n        \"href\": \"../Crafting-Monitor/index.html\",\n        \"title\": \"Crafting Monitor\"\n      }}></a></h2>\n    <p>{`To be a valid crafting CPU, two rules must be met:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The CPU must be a cuboid, completely composed of the parts listed above; air or other blocks are not valid.`}</li>\n      <li parentName=\"ol\">{`The CPU must contain at least 1 storage component.`}</li>\n    </ol>\n    <p>{`The crafting CPU as a multi-block only requires a single channel for the\nentire structure. Crafting co-processors increase the number of tasks the\ncrafting CPU can perform at once; with no co-processors, the crafting CPU can\nperform a single task at a time. Storage requirements are moderately\ncomplicated, and do not follow the usual ME storage math, but for a first\napproximation, you will need a little over one byte per input item, output\nitem, or operation.`}</p>\n    <p>{`You can name your `}<a parentName=\"p\" {...{\n        \"href\": \"index.html\"\n      }}>{`Crafting CPU`}</a>{`s by naming any of the crafting\nunits it is made up of with an `}<ItemLink id=\"appliedenergistics2:inscriber\" mdxType=\"ItemLink\"></ItemLink>{` or an Anvil.`}</p>\n    <p>{`To provide patterns to the autocrafting cpus you can use `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` or `}<ItemLink id=\"appliedenergistics2:item_level_emitter\" mdxType=\"ItemLink\"></ItemLink>{`.`}</p>\n    <h3>{`Intro to Autocrafting`}</h3>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","ItemLink","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","id","isMDXComponent"],"sourceRoot":""}