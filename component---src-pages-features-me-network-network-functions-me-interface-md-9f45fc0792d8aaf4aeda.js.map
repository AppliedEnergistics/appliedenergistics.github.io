{"version":3,"file":"component---src-pages-features-me-network-network-functions-me-interface-md-9f45fc0792d8aaf4aeda.js","mappings":"gRAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAWL,EAAc,YACzBM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,kBAAG,eAAKC,WAAW,IACf,IAAO,gCACP,IAAO,qCACA,eAAKA,WAAW,IACvB,IAAO,uCACP,IAAO,oCALX,QAMmB,QAACR,EAAD,CAAUS,GAAG,qCAAqCF,QAAQ,aAN7E,kaAYA,0BAAY,aAAGC,WAAW,IACtB,KAAQ,aACR,MAAS,iBAFb,OAIA,oBACA,2BAAa,aAAGA,WAAW,KACvB,KAAQ,aACR,MAAS,mBAEb,yBAAW,QAACR,EAAD,CAAUS,GAAG,qCAAqCF,QAAQ,aAArE,mGAEA,qIAC2B,QAACP,EAAD,CAAUS,GAAG,qCAAqCF,QAAQ,aADrF,oEAE4B,QAACP,EAAD,CAAUS,GAAG,qCAAqCF,QAAQ,aAFtF,2IAKA,+mBAQA,yBAAW,QAACP,EAAD,CAAUS,GAAG,qCAAqCF,QAAQ,aAArE,gBACF,aAAGC,WAAW,IACR,KAAQ,0BADd,WADE,kBAIA,QAACP,EAAD,CAAWQ,GAAG,qCAAqCF,QAAQ,eAK/DF,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/Features/me-network/network-functions/me-interface.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst RecipeFor = makeShortcode(\"RecipeFor\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../assets/large/interface.png\",\n        \"alt\": \"A picture of a Interface Block.\"\n      }}></img><img parentName=\"p\" {...{\n        \"src\": \"../assets/large/interface_module.png\",\n        \"alt\": \"A picture\\nof a Interface Part.\"\n      }}></img>{`The `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` is the only component which can\nbe used as a part, or as a Block. Crafting an ME interface in either form by\nitself produces the other form. The thin form is useful if you want to provide\nseveral different interfaces in a single block of physical space, but each\nwill need its own channel. The block form lets multiple other blocks connect\nto a single ME interface, using only one channel for the interface.`}</p>\n    <p>{`|  | `}<a parentName=\"p\" {...{\n        \"href\": \"index.html\",\n        \"title\": \"ME Interface\"\n      }}></a>{`  `}</p>\n    <hr></hr>\n    <h2>{`|  | `}<a parentName=\"h2\" {...{\n        \"href\": \"index.html\",\n        \"title\": \"ME Interface\"\n      }}></a></h2>\n    <p>{`The `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` acts as an in\nbetween when working with pipes, tubes, networks, or machines from other mods.`}</p>\n    <p>{`You can configure certain items to be exported from the `}{`[ME Network]`}{`(../ME-\nNetwork/index.html) into the `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` for use with other mods. Or use\nother mods to insert into any `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{`. as long as it isn't full of\nexported materials it will add any added items into the `}{`[ME Network]`}{`(../ME-\nNetwork/index.html).`}</p>\n    <p>{`The interface normally functions like a chest, however with one exception, if\nyou place a storage bus on an interface, you essentially include the entire\nnetwork instead, this allows networks to share huge sets of contents and to be\nchained together in a very effective manner. In addition to this mode, if you\nyou configure your interface to explicilty provide specific materials, the\nstorage bus will behave as if the interface was a standard chest, disabling\nthis advanced feature. (As of this writing, autocrafting in another network\nwon't reliably use the items in a configured interface.)`}</p>\n    <p>{`The `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` require a\n`}<a parentName=\"p\" {...{\n        \"href\": \"../Channels/index.html\"\n      }}>{`channel`}</a>{` to function.`}</p>\n    <RecipeFor id=\"appliedenergistics2:item_interface\" mdxType=\"RecipeFor\"></RecipeFor>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","ItemLink","RecipeFor","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","id","isMDXComponent"],"sourceRoot":""}