{"version":3,"file":"component---src-pages-features-me-network-misc-p-2-p-tunnel-md-62af72ae4b6f2e7ddb6e.js","mappings":"gRAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAWL,EAAc,YACzBM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,QAACP,EAAD,CAAUQ,GAAG,oCAAoCD,QAAQ,cACzD,qLAEO,aAAGE,WAAW,IACjB,KAAQ,4BADL,cAFP,sBAKA,8JAEA,+HAEA,oHACa,aAAGA,WAAW,IACvB,KAAQ,0BADC,YADb,gBAGqC,QAACT,EAAD,CAAUQ,GAAG,gDAAgDD,QAAQ,aAH1G,uGAKK,aAAGE,WAAW,IACf,KAAQ,4BADP,eALL,+NAWA,oCAAsB,QAACT,EAAD,CAAUQ,GAAG,oCAAoCD,QAAQ,aAA/E,yKAGQ,QAACP,EAAD,CAAUQ,GAAG,kCAAkCD,QAAQ,aAH/D,oOAOA,sGAEA,QAACN,EAAD,CAAWO,GAAG,oCAAoCD,QAAQ,eAK9DF,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/features/me-network/misc/p2p-tunnel.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst RecipeFor = makeShortcode(\"RecipeFor\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ItemLink id=\"appliedenergistics2:me_p2p_tunnel\" mdxType=\"ItemLink\"></ItemLink>\n    <p>{`or \"Point to Point Tunnels\" are a versatile configurable system to move items\n/ redstone / power / and fluids from one location to another though an\nexisting `}<a parentName=\"p\" {...{\n        \"href\": \"../ME-Network/index.html\"\n      }}>{`ME Network`}</a>{` without storage.`}</p>\n    <p>{`Tunnels are 1 input to N outputs. This means you can output to as many points\nas you want, but only input at a single point per tunnel.`}</p>\n    <p>{`Networks can support any number of tunnels, of any different types, and they\nall function independently.`}</p>\n    <p>{`ME Tunnels can be used to carry channels from one location to another, and can\ncarry up to 32 `}<a parentName=\"p\" {...{\n        \"href\": \"../Channels/index.html\"\n      }}>{`channels`}</a>{`, same as a `}<ItemLink id=\"appliedenergistics2:fluix_covered_dense_cable\" mdxType=\"ItemLink\"></ItemLink>{`, while only\nrequiring a single channel per point, making tunnels a very powerful tool to\nexpand `}<a parentName=\"p\" {...{\n        \"href\": \"../ME-Network/index.html\"\n      }}>{`me networks`}</a>{`, especially over a distance.\nHowever with the great flex-ability they give you comes a limitation, the\nchannel of a p2p tunnel cannot be carried by another p2p tunnel, meaning that\nyou cannot nest them recursively.`}</p>\n    <p>{`To configure a `}<ItemLink id=\"appliedenergistics2:me_p2p_tunnel\" mdxType=\"ItemLink\"></ItemLink>{`\nyou must first attune the tunnel to carry what you want it to, then you need\nto configure the outputs to their input. You configure the connections by\nusing the `}<ItemLink id=\"appliedenergistics2:memory_card\" mdxType=\"ItemLink\"></ItemLink>{`; First\nShift+Right Click the input to save it on your memory card, then simply right\nclick the different outputs to store the input onto the outputs. this also\nsets the type of the output to match the type of the input.`}</p>\n    <p>{`Tunnels can be attuned by right clicking on them with different types of\nitems:`}</p>\n    <RecipeFor id=\"appliedenergistics2:me_p2p_tunnel\" mdxType=\"RecipeFor\"></RecipeFor>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","ItemLink","RecipeFor","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"sourceRoot":""}