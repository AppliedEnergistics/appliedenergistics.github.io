{"version":3,"file":"component---src-pages-features-me-network-network-functions-me-import-bus-md-6c77bdc1840de758a406.js","mappings":"+QAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAWL,EAAc,YACzBM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,kBAAG,eAAKC,WAAW,IACf,IAAO,iCACP,IAAO,gCAFX,+QAOa,QAACR,EAAD,CAAUS,GAAG,sCAAsCF,QAAQ,aAPxE,oHAS0B,QAACP,EAAD,CAAUS,GAAG,sCAAsCF,QAAQ,aATrF,iBAUF,aAAGC,WAAW,IACR,KAAQ,0BADd,WAVE,kBAaA,4DAA8C,QAACR,EAAD,CAAUS,GAAG,sCAAsCF,QAAQ,aAAzG,MACA,QAACN,EAAD,CAAWQ,GAAG,sCAAsCF,QAAQ,eAKhEF,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/features/me-network/network-functions/me-import-bus.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst RecipeFor = makeShortcode(\"RecipeFor\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><img parentName=\"p\" {...{\n        \"src\": \"../assets/large/import_bus.png\",\n        \"alt\": \"A picture of an Import Bus.\"\n      }}></img>{`Pulls items from\nthe inventory it is pointed at and places them into the `}{`[ME Network]`}{`(../ME-\nNetwork/index.html)'s Networked Storage. You can specify which items it will\npull out via the UI, else it tries to pull out any item in the adjacent\ninventory. The `}<ItemLink id=\"appliedenergistics2:item_import_bus\" mdxType=\"ItemLink\"></ItemLink>{` will\nattempt to import any possible options, even if 1 or more of the configured\nitems cannot be stored. The `}<ItemLink id=\"appliedenergistics2:item_import_bus\" mdxType=\"ItemLink\"></ItemLink>{` requires a\n`}<a parentName=\"p\" {...{\n        \"href\": \"../Channels/index.html\"\n      }}>{`channel`}</a>{` to function.`}</p>\n    <p>{`This is the functional opposite of the `}<ItemLink id=\"appliedenergistics2:item_export_bus\" mdxType=\"ItemLink\"></ItemLink>{`.`}</p>\n    <RecipeFor id=\"appliedenergistics2:item_import_bus\" mdxType=\"RecipeFor\"></RecipeFor>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","ItemLink","RecipeFor","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","id","isMDXComponent"],"sourceRoot":""}