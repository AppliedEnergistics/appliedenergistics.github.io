{"version":3,"file":"component---src-pages-features-me-network-network-storage-me-storage-bus-md-3e6b0c35ddb9eb1bf7cd.js","mappings":"+QAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAWL,EAAc,YACzBM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,yBAAW,QAACP,EAAD,CAAUQ,GAAG,uCAAuCD,QAAQ,aAAvE,gNAIA,yCAA2B,QAACP,EAAD,CAAUQ,GAAG,uCAAuCD,QAAQ,aAAvF,yHAEqC,QAACP,EAAD,CAAUQ,GAAG,uCAAuCD,QAAQ,aAFjG,uBAGF,aAAGE,WAAW,IACR,KAAQ,0BADd,WAHE,MAMA,0LAGA,8FACA,QAACT,EAAD,CAAUQ,GAAG,qCAAqCD,QAAQ,aAjBrD,sKAoBL,sDAAwC,QAACP,EAAD,CAAUQ,GAAG,qCAAqCD,QAAQ,aAAlG,8MAIA,sBAAQ,cAAIE,WAAW,KAAf,KAAwB,kBAAQA,WAAW,MAAnB,wFAEhC,QAACR,EAAD,CAAWO,GAAG,uCAAuCD,QAAQ,eAKjEF,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/features/me-network/network-storage/me-storage-bus.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst RecipeFor = makeShortcode(\"RecipeFor\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The `}<ItemLink id=\"appliedenergistics2:item_storage_bus\" mdxType=\"ItemLink\"></ItemLink>{`, when attached\nto another inventory block in the world lets you access that inventory via\nnetworked functions. This allows you to use chests, barrels, or other types of\nitem storage in your networks.`}</p>\n    <p>{`The storage via the `}<ItemLink id=\"appliedenergistics2:item_storage_bus\" mdxType=\"ItemLink\"></ItemLink>{`\nis bi-directional, it can both insert, or extract items from the inventory\nblock it is attached to as long as the `}<ItemLink id=\"appliedenergistics2:item_storage_bus\" mdxType=\"ItemLink\"></ItemLink>{` has its required\n`}<a parentName=\"p\" {...{\n        \"href\": \"../Channels/index.html\"\n      }}>{`channel`}</a>{`.`}</p>\n    <p>{`The UI allows you to control which items are selected as storable items, this\nselection has no effect on what items can be extracted once they are in the\nstorage.`}</p>\n    <p>{`The Storage Bus will function with nearly any inventory block, including`}</p>\n    <ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>, Minefactory Reloaded\nDSUs, Factorization Barrels, JABBA Barrels, and Better Storage Crates. They\ncan also be used to route items passivly into Buildcraft Pipes.\n    <p>{`If you place a storage bus on an `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` the storage bus will be able to\ninteract with the full conents of the target network, unless that interface is\nconfigured to store items inside itself, in which case it will see those\nstored items.`}</p>\n    <p>{` `}<em parentName=\"p\">{` `}<strong parentName=\"em\">{`* Storage Buses ignore input/output sides for DSUs, Barrels, and Digital\nChests.`}</strong></em></p>\n    <RecipeFor id=\"appliedenergistics2:item_storage_bus\" mdxType=\"RecipeFor\"></RecipeFor>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","ItemLink","RecipeFor","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"sourceRoot":""}