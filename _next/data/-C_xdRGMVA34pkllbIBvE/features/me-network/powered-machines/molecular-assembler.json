{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h3: \"h3\",\n      a: \"a\",\n      strong: \"strong\"\n    }, _provideComponents(), props.components), {ItemLink, RecipeFor} = _components;\n    if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n    if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"The assembler is a powered machine which crafts items, it can be upgraded by\\ninserting \", _jsx(ItemLink, {\n          id: \"speed_card\"\n        }), \" into it;\\nonce upgraded it is very fast.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Functions in one of two modes, single pattern mode or automatic crafting mode.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"single-pattern-mode\",\n        children: \"Single Pattern Mode\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Uses a single \", _jsx(ItemLink, {\n          id: \"crafting_pattern\"\n        }), \" inserted into the assembler to craft an item\\nwithout a crafting network.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This makes it useful in stand alone setups or in configurations where it can\\nbe fed by other mods and even chained together to to craft a final output.\\nItems will be accepted from any side and exported into any available\\ninventories.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"automatic-crafting-mode\",\n        children: \"Automatic Crafting Mode\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Uses the \", _jsx(ItemLink, {\n          id: \"crafting_pattern\"\n        }), \"\\nfrom attached \", _jsx(ItemLink, {\n          id: \"pattern_provider\"\n        }), \" to craft items when they are\\nrequested by the \", _jsx(_components.a, {\n          href: \"/features/auto-crafting/\",\n          children: \"Crafting CPU\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"NOTE:\"\n        }), \" This mode requires that the assembler's pattern slot is empty.\"]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"molecular_assembler\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"categories":["ME Network/Powered Machines"],"item_ids":["ae2:molecular_assembler"],"title":"Molecular Assembler"}},"frontMatter":{"categories":["ME Network/Powered Machines"],"item_ids":["ae2:molecular_assembler"],"title":"Molecular Assembler"},"pagePath":"/features/me-network/powered-machines/molecular-assembler.md"},"__N_SSG":true}