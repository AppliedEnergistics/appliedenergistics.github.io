{"pageProps":{"source":{"compiledSource":"var m=Object.defineProperty,c=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var d=(t,n,i)=>n in t?m(t,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[n]=i,e=(t,n)=>{for(var i in n||(n={}))l.call(n,i)&&d(t,i,n[i]);if(r)for(var i of r(n))o.call(n,i)&&d(t,i,n[i]);return t},p=(t,n)=>c(t,h(n));var s=(t,n)=>{var i={};for(var a in t)l.call(t,a)&&n.indexOf(a)<0&&(i[a]=t[a]);if(t!=null&&r)for(var a of r(t))n.indexOf(a)<0&&o.call(t,a)&&(i[a]=t[a]);return i};const makeShortcode=t=>function(i){return console.warn(\"Component \"+t+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},i))},ItemLink=makeShortcode(\"ItemLink\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var a=i,{components:t}=a,n=s(a,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),n),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"This page describes how AE2 can be tweaked by modpack authors or players to their own play-style.\"),mdx(\"h2\",e({},{id:\"configuration\"}),\"Configuration\"),mdx(\"h3\",e({},{id:\"channel-modes\"}),\"Channel Modes\"),mdx(\"p\",null,`If you don't like playing with channels or just want a more laid back experience, see the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/features/me-network/channels/#channel-modes\"}),\"channel modes section\"),` for multiple options\nto customize AE2's channels mechanic.`),mdx(\"h3\",e({},{id:\"faster-crystal-growth-in-certain-fluids\"}),\"Faster Crystal Growth in Certain Fluids\"),mdx(\"p\",null,\"AE2 allows a fluid tag to be specified in \",mdx(\"inlineCode\",{parentName:\"p\"},\"improvedFluidTag\"),`, which will increase the speed at which crystal seeds\ngrow by `,mdx(\"inlineCode\",{parentName:\"p\"},\"improvedFluidMultiplier\"),\" (default: 2) when they are submerged in this type of fluid.\"),mdx(\"h2\",e({},{id:\"recipes\"}),\"Recipes\"),mdx(\"p\",null,`AE2 uses standard JSON recipes. The easiest starting point is to download the jar file and unpack it. Recipes are\nin `,mdx(\"inlineCode\",{parentName:\"p\"},\"data/ae2/recipes\"),\".\"),mdx(\"h3\",e({},{id:\"special-recipe-types\"}),\"Special Recipe Types\"),mdx(\"p\",null,\"AE2 introduces a few custom recipe types that use a custom JSON format. They are described in the following sections.\"),mdx(\"h4\",e({},{id:\"inscriber\"}),\"Inscriber\"),mdx(\"p\",null,\"Used by the \",mdx(ItemLink,{id:\"inscriber\",mdxType:\"ItemLink\"}),\". Example recipes can be found in \",mdx(\"inlineCode\",{parentName:\"p\"},\"data/ae2/recipes/inscriber\"),\".\"),mdx(\"p\",null,`Please note that the inscriber will also allow each recipe to be flipped so that top and bottom slots are reversed, so\ntwo recipes whose top/bottom are the same after flipping would result in a recipe conflict.`),mdx(\"p\",null,\"The available JSON properties are as follows:\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Property\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"type\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Must be \",mdx(\"inlineCode\",{parentName:\"td\"},\"ae2:inscriber\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"mode\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Defines whether the top and bottom ingredients are consumed (\",mdx(\"inlineCode\",{parentName:\"td\"},\"press\"),\") or not (\",mdx(\"inlineCode\",{parentName:\"td\"},\"inscribe\"),\")\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"ingredients\"),\".\",mdx(\"inlineCode\",{parentName:\"td\"},\"top\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Ingredient for the top slot (optional).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"ingredients\"),\".\",mdx(\"inlineCode\",{parentName:\"td\"},\"middle\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Ingredient for the middle slot (required).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"ingredients\"),\".\",mdx(\"inlineCode\",{parentName:\"td\"},\"bottom\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Ingredient for the bottom slot (optional).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"result\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Recipe result\")))),mdx(\"h4\",e({},{id:\"entropy-manipulator\"}),\"Entropy Manipulator\"),mdx(\"p\",null,\"The \",mdx(ItemLink,{id:\"entropy_manipulator\",mdxType:\"ItemLink\"}),` uses recipes to decide what it can be used on.\nExample recipes can be found in `,mdx(\"inlineCode\",{parentName:\"p\"},\"data/ae2/recipes/entropy\"),\".\"),mdx(\"p\",null,\"Right-clicking with the entry manipulator uses recipes of type \",mdx(\"inlineCode\",{parentName:\"p\"},\"heat\"),\", while shift-right-clicking will use \",mdx(\"inlineCode\",{parentName:\"p\"},\"cool\"),`.\nPlacing an entropy manipulator in a dispenser will try both types (first `,mdx(\"inlineCode\",{parentName:\"p\"},\"cool\"),\", then \",mdx(\"inlineCode\",{parentName:\"p\"},\"heat\"),\").\"),mdx(\"p\",null,\"The available JSON properties are as follows:\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Property\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"type\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Must be \",mdx(\"inlineCode\",{parentName:\"td\"},\"ae2:entropy\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"mode\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"The use-mode of the entropy manipulator this recipe applies to (\",mdx(\"inlineCode\",{parentName:\"td\"},\"heat\"),\" or \",mdx(\"inlineCode\",{parentName:\"td\"},\"cool\"),\").\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"input\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Which in-world block/fluid this recipe applies to.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"input\"),\".\",mdx(\"inlineCode\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Defines which blocks this recipe applies to (see below for details).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"input\"),\".\",mdx(\"inlineCode\",{parentName:\"td\"},\"fluid\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Defines which fluids this recipe applies to (see below for details).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"output\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Defines the result of using the item on \",mdx(\"inlineCode\",{parentName:\"td\"},\"input\"),\".\")))),mdx(\"h5\",e({},{id:\"defining-inputs\"}),\"Defining Inputs\"),mdx(\"p\",null,`The input for the entropy recipe type can be a block or fluid, or both at the same time, to match only\nspecific waterlogged blocks.`),mdx(\"p\",null,\"Block and fluid inputs can be defined as follows:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),`{\n  \"input\": {\n    \"block\": {\n      \"id\": \"minecraft:cobblestone\",\n      \"property1\": \"value\",\n      \"property2\": [\"value1\", \"value2\"],\n      \"property3\": {\n        \"min\": 1,\n        \"max\": 5\n      }\n    },\n    \"fluid\": {\n      \"id\": \"minecraft:water\",\n      \"property1\": \"value\",\n      \"property2\": [\"value1\", \"value2\"],\n      \"property3\": {\n        \"min\": 1,\n        \"max\": 5\n      }\n    }\n  }\n}\n`)),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"id\"),` property is mandatory, while additional properties may be specified to match specific block state properties,\neither directly, as a list of matching values, or as a range (between `,mdx(\"inlineCode\",{parentName:\"p\"},\"min\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"max\"),\").\"),mdx(\"h5\",e({},{id:\"defining-output\"}),\"Defining Output\"),mdx(\"p\",null,\"Applying an entropy manipulator recipe can result in one or all of:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Changing the block\"),mdx(\"li\",{parentName:\"ul\"},\"Changing the fluid\"),mdx(\"li\",{parentName:\"ul\"},\"Dropping items\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),`{\n  \"output\": {\n    \"block\": {\n      \"id\": \"minecraft:cobblestone\",\n      \"keep\": true,\n      \"property1\": \"value\"\n    },\n    \"fluid\": {\n      \"id\": \"minecraft:water\",\n      \"property2\": \"value\"\n    },\n    \"drops\": [\n      {\n        \"item\": \"minecraft:snowball\",\n        \"count\": 1\n      }\n    ]\n  }\n}\n`)),mdx(\"p\",null,`All three properties (block, fluid, drops) are optional, but can also be used together.\nThe special `,mdx(\"inlineCode\",{parentName:\"p\"},\"keep\"),\" property for \",mdx(\"inlineCode\",{parentName:\"p\"},\"block\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"fluid\"),` will copy over the block state properties from the existing\nblock while changing the block or fluid `,mdx(\"inlineCode\",{parentName:\"p\"},\"id\"),`. Additionally, any extra properties will be interpreted as block state\nproperties and applied to the new block.`),mdx(\"p\",null,\"If the operation should drop items, those should be specified as a list in \",mdx(\"inlineCode\",{parentName:\"p\"},\"drops\"),\".\"),mdx(\"h4\",e({},{id:\"matter-cannon-ammo\"}),\"Matter Cannon Ammo\"),mdx(\"p\",null,\"The \",mdx(ItemLink,{id:\"matter_cannon\",mdxType:\"ItemLink\"}),` uses recipes to decide which items count as ammo, and what their damage value should\nbe. Example recipes can be found in `,mdx(\"inlineCode\",{parentName:\"p\"},\"data/ae2/recipes/matter_cannon\"),\".\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Property\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"type\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Must be \",mdx(\"inlineCode\",{parentName:\"td\"},\"ae2:matter_cannon\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"ammo\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Ingredient identifying which item this recipe applies to.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"weight\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"The weight of the ammo. This affects block penetration and damage. Damage is weight divided by 20, rounded up.\")))))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Customizing AE2","sidenav_icon":"certus_quartz_wrench"}},"frontMatter":{"title":"Customizing AE2","sidenav_icon":"certus_quartz_wrench"},"pagePath":"/customizing-ae2.md"},"__N_SSG":true}