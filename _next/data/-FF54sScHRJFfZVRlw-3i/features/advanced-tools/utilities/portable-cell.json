{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\"\n    }, _provideComponents(), props.components), {ItemLink, RecipeFor} = _components;\n    if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n    if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"The \", _jsx(ItemLink, {\n          id: \"portable_item_cell_1k\"\n        }), \" is a portable\\ninventory. It requires power to function but can be charged in the \", _jsx(ItemLink, {\n          id: \"charger\"\n        }), \". It acts like any other storage\\ncell except that you can access its content without external hardware. It\\nfunctions with the \", _jsx(ItemLink, {\n          id: \"io_port\"\n        }), \" and\\nother features in the same way as \", _jsx(ItemLink, {\n          id: \"item_storage_cell_1k\"\n        }), \" or other storage cells.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(ItemLink, {\n          id: \"portable_item_cell_1k\"\n        }), \" are smaller then most cells, only carrying\\n512 bytes, and 27 types at 8 bytes per type. Its battery can hold 20k ae and it drains\\n0.5 ae/t when in a \", _jsx(ItemLink, {\n          id: \"drive\"\n        }), \" or \", _jsx(ItemLink, {\n          id: \"chest\"\n        }), \" however drains\\n1 ae/t when opened it directly.\"]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_item_cell_1k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_item_cell_4k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_item_cell_16k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_item_cell_64k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_fluid_cell_1k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_fluid_cell_4k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_fluid_cell_16k\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"portable_fluid_cell_64k\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"categories":["Advanced Tools/Utilities"],"item_ids":["ae2:portable_item_cell_1k","ae2:portable_item_cell_4k","ae2:portable_item_cell_16k","ae2:portable_item_cell_64k","ae2:portable_fluid_cell_1k","ae2:portable_fluid_cell_4k","ae2:portable_fluid_cell_16k","ae2:portable_fluid_cell_64k"],"related":["Possible Upgrades"],"title":"Portable Cell"}},"frontMatter":{"categories":["Advanced Tools/Utilities"],"item_ids":["ae2:portable_item_cell_1k","ae2:portable_item_cell_4k","ae2:portable_item_cell_16k","ae2:portable_item_cell_64k","ae2:portable_fluid_cell_1k","ae2:portable_fluid_cell_4k","ae2:portable_fluid_cell_16k","ae2:portable_fluid_cell_64k"],"related":["Possible Upgrades"],"title":"Portable Cell"},"pagePath":"/features/advanced-tools/utilities/portable-cell.md"},"__N_SSG":true}