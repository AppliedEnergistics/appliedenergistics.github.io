{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      img: \"img\",\n      table: \"table\",\n      thead: \"thead\",\n      tr: \"tr\",\n      th: \"th\",\n      tbody: \"tbody\",\n      td: \"td\",\n      a: \"a\",\n      strong: \"strong\",\n      h3: \"h3\"\n    }, _provideComponents(), props.components), {ItemLink, RecipeFor} = _components;\n    if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n    if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"The ME Network needs energy to function. This energy is measured in AE per tick.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To power your network, you can either connect a \", _jsx(ItemLink, {\n          id: \"vibration_chamber\"\n        }), \" directly,\\nor use an \", _jsx(ItemLink, {\n          id: \"energy_acceptor\"\n        }), \" to connect energy sources from compatible mods.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Your network will have some inherent energy storage, which can be increased by connecting\\nenergy cells.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"To see the current energy statistics for your network, right-click any part of it with a \", _jsx(ItemLink, {\n          id: \"network_tool\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"energy-acceptor\",\n        children: \"Energy Acceptor\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/assets/large/energy_accepter.png\",\n          alt: \"Picture of a Energy Accepter.\",\n          width: \"496\",\n          height: \"512\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(ItemLink, {\n          id: \"energy_acceptor\"\n        }), \" converts energy from external\\nsystems into AE and stores it in the network.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The following energy systems are supported:\"\n      }), \"\\n\", _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Energy System\"\n            }), _jsx(_components.th, {\n              children: \"Conversion Rate\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"Forge Energy / Redstone Flux\"\n            }), _jsx(_components.td, {\n              children: \"2 FE = 1 AE\"\n            })]\n          })\n        })]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"energy_acceptor\"\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"cable_energy_acceptor\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"energy-storage\",\n        children: \"Energy Storage\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/assets/large/energy_cell.png\",\n          alt: \"A picture of a uncharged, and charged energy cell.\",\n          width: \"702\",\n          height: \"382\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Stores up to 200,000 AE. They do not accept power directly, but are used to add\\nadditional power storage to an already existing \", _jsx(_components.a, {\n          href: \"/features/me-network/\",\n          children: \"ME Network\"\n        }), \".\"]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"energy_cell\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/assets/large/dense_energy_cell.png\",\n          alt: \"A picture of a uncharged, and charged energy cell.\",\n          width: \"877\",\n          height: \"513\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"store AE energy up to 1.6 million units. They do not accept power directly but\\nare used to add additional power storage to an already existing \", _jsx(_components.a, {\n          href: \"/features/me-network/\",\n          children: \"ME Network\"\n        }), \".\"]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"dense_energy_cell\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(ItemLink, {\n          id: \"creative_energy_cell\"\n        }), \" contain infinite AE energy and can be used\\nto provide power without needing to generate it.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"They can only be spawned in \", _jsx(_components.strong, {\n          children: \"Creative Mode\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"vibration-chamber\",\n        children: \"Vibration Chamber\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/assets/large/vibration_chamber.png\",\n          alt: \"A picture of a Vibration Chamber.\",\n          width: \"470\",\n          height: \"478\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"A modified furnace capable of generating AE Power instead of smelting ores. When\\nplaced on an \", _jsx(_components.a, {\n          href: \"/features/me-network/\",\n          children: \"ME Network\"\n        }), \" it will charge \", _jsx(ItemLink, {\n          id: \"energy_cell\"\n        }), \" or\\npower other Network Devices.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The \", _jsx(ItemLink, {\n          id: \"vibration_chamber\"\n        }), \" will burn\\nalmost any solid burnable fuel for power. It will slow, or accelerate the burn\\ndepending on how much power it is able to store vs what is wasted. Generates\\nbetween 1 and 10 AE/t depending on its burn speed.\"]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"vibration_chamber\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"sharing-power-between-networks\",\n        children: \"Sharing Power Between Networks\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"A part designed to share energy between two \", _jsx(_components.a, {\n          href: \"/features/me-network/\",\n          children: \"ME Network\"\n        }), \"s without sharing anything else, also\\nused to craft \", _jsx(ItemLink, {\n          id: \"fluix_glass_cable\"\n        }), \".\"]\n      }), \"\\n\", _jsx(RecipeFor, {\n        id: \"quartz_fiber\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Network Energy","sidenav_icon":"ae2:energy_cell","item_ids":["ae2:energy_acceptor","ae2:cable_energy_acceptor","ae2:creative_energy_cell","ae2:energy_cell","ae2:dense_energy_cell","ae2:vibration_chamber","ae2:quartz_fiber"]}},"frontMatter":{"title":"Network Energy","sidenav_icon":"ae2:energy_cell","item_ids":["ae2:energy_acceptor","ae2:cable_energy_acceptor","ae2:creative_energy_cell","ae2:energy_cell","ae2:dense_energy_cell","ae2:vibration_chamber","ae2:quartz_fiber"]},"pagePath":"/features/me-network/network-energy.md"},"__N_SSG":true}