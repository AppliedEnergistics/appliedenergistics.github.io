{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h3: \"h3\",\n      p: \"p\"\n    }, _provideComponents(), props.components), {ItemLink} = _components;\n    if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h3, {\n        id: \"how-items-are-placed\",\n        children: \"How Items are Placed\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Items entering the network will start at the highest priority storage, as\\ntheir first destination, in the case of two storages have the same priority,\\nif one already contains the item, they will prefer that storage over any\\nother. Any Whitelisted cells will be treated as already containing the item\\nwhen in the same priority group as other storages.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"upgrading-storage-cells\",\n        children: \"Upgrading Storage Cells\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"If you have an EMPTY Storage cell any tier you can remove the\\nCell/Segment/Block/Cluster from the housing by shift + right clicking with it\\nin your hand, so you can store it or use it to make bigger cells. it also\\ngives you an empty storage cell housing to re-insert a cell into.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"colored-terminals--monitors\",\n        children: \"Colored Terminals / Monitors\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"When you place a \", _jsx(ItemLink, {\n          id: \"terminal\"\n        }), \" or\\nother monitors on a cable, they take on the color of that cable, so if the cable is\\nblue, so will the screen of the placed part.\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"one-way-network-connections\",\n        children: \"One Way Network Connections\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can hook up a Storage Bus to a interface on a seperate network, to provide\\na one way connection, allowing you to create public / private networks. This\\nrequires that the Interface be unconfigured, if the interface is configured to\\nstore items, it will instead see the items in the inventory.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"rotating-blocks\",\n        children: \"Rotating Blocks\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can rotate most blocks by using a Buildcraft Compatible Wrench, such as\\nthe \", _jsx(ItemLink, {\n          id: \"certus_quartz_wrench\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"setting-priority\",\n        children: \"Setting Priority\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can set Storage Priorities on \", _jsx(ItemLink, {\n          id: \"chest\"\n        }), \", \", _jsx(ItemLink, {\n          id: \"drive\"\n        }), \" or \", _jsx(ItemLink, {\n          id: \"storage_bus\"\n        }), \" in the Priority Tab on the\\nright top side. Higher Priorities are more imporant then lower ones and by\\ndefault all storages are set to 0.\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"removing-blocks--parts\",\n        children: \"Removing Blocks / Parts\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can Shift + Rightclick with a Buildcraft Compatible Wrench and it will\\ndismantle the AE Block or Part and dropping it for you, this is most useful\\nwith Parts as if you use a pick it will drop any cable, and parts in the\\nblock, using a wrench lets you only take off a single part.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"color-applicator\",\n        children: \"Color Applicator\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"You can set a higher priority on the ME Chest that houses the color\\napplicator, and it will always store all your dyes in the applicator, ready\\nfor you to use at a moment's notice, provided of course, that the applicator\\nis in the chest when you insert dyes into the system\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Miscellaneous Tips"}},"frontMatter":{"title":"Miscellaneous Tips"},"pagePath":"/miscellaneous-tips.md"},"__N_SSG":true}