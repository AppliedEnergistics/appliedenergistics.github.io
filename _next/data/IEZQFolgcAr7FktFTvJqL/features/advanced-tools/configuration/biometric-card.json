{"pageProps":{"source":{"compiledSource":"var l=Object.defineProperty,h=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var s=(e,o,t)=>o in e?l(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,a=(e,o)=>{for(var t in o||(o={}))c.call(o,t)&&s(e,t,o[t]);if(n)for(var t of n(o))i.call(o,t)&&s(e,t,o[t]);return e},d=(e,o)=>h(e,u(o));var p=(e,o)=>{var t={};for(var r in e)c.call(e,r)&&o.indexOf(r)<0&&(t[r]=e[r]);if(e!=null&&n)for(var r of n(e))o.indexOf(r)<0&&i.call(e,r)&&(t[r]=e[r]);return t};const makeShortcode=e=>function(t){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},t))},ItemLink=makeShortcode(\"ItemLink\"),RecipeFor=makeShortcode(\"RecipeFor\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var r=t,{components:e}=r,o=p(r,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,`Encodes a players identity on the card, right click another player, or shift\nslick to set yourself. If you encode the same player twice, it will clear the\ncard. A Cleared card represents other users as the \"default\".`),mdx(\"p\",null,\"When the \",mdx(ItemLink,{id:\"biometric_card\",mdxType:\"ItemLink\"}),` has\nbeen encoded it will show a Identicon for the user so you can tell cards\napart, each card for the user will have the same Identicon.`),mdx(RecipeFor,{id:\"biometric_card\",mdxType:\"RecipeFor\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"categories":["Advanced Tools/Configuration Tools"],"item_ids":["ae2:biometric_card"],"title":"Biometric Card"}},"frontMatter":{"categories":["Advanced Tools/Configuration Tools"],"item_ids":["ae2:biometric_card"],"title":"Biometric Card"},"pagePath":"/features/advanced-tools/configuration/biometric-card.md"},"__N_SSG":true}