{"pageProps":{"source":{"compiledSource":"var p=Object.defineProperty,d=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,t,n)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,a=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&l(e,n,t[n]);if(s)for(var n of s(t))r.call(t,n)&&l(e,n,t[n]);return e},c=(e,t)=>d(e,m(t));var h=(e,t)=>{var n={};for(var o in e)i.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(e!=null&&s)for(var o of s(e))t.indexOf(o)<0&&r.call(e,o)&&(n[o]=e[o]);return n};const makeShortcode=e=>function(n){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},n))},ItemLink=makeShortcode(\"ItemLink\"),RecipeFor=makeShortcode(\"RecipeFor\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var o=n,{components:e}=o,t=h(o,[\"components\"]);return mdx(MDXLayout,c(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",a({parentName:\"p\"},{src:\"/assets/large/me_chest.png\",alt:\"A picture of an ME Chest\",width:530,height:557})),\"The \",mdx(ItemLink,{id:\"chest\",mdxType:\"ItemLink\"}),` is the simplest way to use a\nStorage cell, it will give you direct access to the contents of the cell\nplaced inside.`),mdx(ItemLink,{id:\"chest\",mdxType:\"ItemLink\"}),mdx(\"p\",null,\"show their contents and the storage cell status on the front face.\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Red - Indicates the Storage Cell is Full.\"),mdx(\"li\",{parentName:\"ul\"},\"Orange - Indicates the Storage Cell cannot hold any more types, but it can store more items.\"),mdx(\"li\",{parentName:\"ul\"},\"Green - Indicates the cell can hold more types, or more items.\"),mdx(\"li\",{parentName:\"ul\"},\"Black - Indicates there is no channel, or power is offline.\")),mdx(ItemLink,{id:\"chest\",mdxType:\"ItemLink\"}),mdx(\"p\",null,\"can be powered stand alone with external power, or as part of a \",mdx(\"a\",a({parentName:\"p\"},{href:\"/features/me-network/\"}),`ME\nNetwork`),`. When on a network, the storage of the\nchest will be available to any other devices in the same network using an\nassigned Channel. When used without a network, the chest will not transfer\nfull stacks at once, capping transfers at 38 items instead.`),mdx(\"p\",null,\"The \",mdx(ItemLink,{id:\"chest\",mdxType:\"ItemLink\"}),` consumes 1 AE/t, and\nconsumes a small amount based on which storage cell is installed. If powered\non its own it has a very small internal storage which only lasts a few\nmoments, using a `,mdx(ItemLink,{id:\"energy_cell\",mdxType:\"ItemLink\"}),` or\nusing a battery from another mod is suggested for reliable operation.`),mdx(\"p\",null,\"The \",mdx(ItemLink,{id:\"chest\",mdxType:\"ItemLink\"}),` has two UI's, one is\nused to place the storage cell inside the device from the sides or bottom, the\nother is accessed by using the top surface to access the contents.`),mdx(\"p\",null,\"Items can be injected into the \",mdx(ItemLink,{id:\"chest\",mdxType:\"ItemLink\"}),` like any other inventory, however\nitems cannot be extracted with automation except via networked functions like\nthe `,mdx(ItemLink,{id:\"export_bus\",mdxType:\"ItemLink\"}),\".\"),mdx(RecipeFor,{id:\"chest\",mdxType:\"RecipeFor\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"categories":["ME Network/Network Storage"],"item_ids":["ae2:chest"],"related":["Other Networked Storage","Storage Cells"],"title":"ME Chest"}},"frontMatter":{"categories":["ME Network/Network Storage"],"item_ids":["ae2:chest"],"related":["Other Networked Storage","Storage Cells"],"title":"ME Chest"},"pagePath":"/features/me-network/network-storage/me-chest.md"},"__N_SSG":true}