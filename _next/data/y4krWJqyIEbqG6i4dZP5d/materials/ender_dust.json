{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\"\n    }, _provideComponents(), props.components), {ItemLink} = _components;\n    if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n    return _jsxs(_components.p, {\n      children: [_jsx(ItemLink, {\n        id: \"ender_dust\"\n      }), \" is obtained by placing an \", _jsx(ItemLink, {\n        id: \"minecraft:ender_pearl\"\n      }), \" in\\nan \", _jsx(ItemLink, {\n        id: \"inscriber\"\n      }), \".\"]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Ender Dust","item_ids":["ae2:ender_dust","ae2:inscriber"]}},"frontMatter":{"title":"Ender Dust","item_ids":["ae2:ender_dust","ae2:inscriber"]},"pagePath":"/materials/ender_dust.md"},"__N_SSG":true}