{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      a: \"a\"\n    }, _provideComponents(), props.components), {ItemLink} = _components;\n    if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        id: \"ad-hoc-networks\",\n        children: \"Ad Hoc Networks\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Ad-Hoc networks are small \", _jsx(_components.a, {\n          href: \"/features/me-network/\",\n          children: \"ME Networks\"\n        }), \" that do not have an \", _jsx(ItemLink, {\n          id: \"controller\"\n        }), \".\\nThey can have up to 8 \", _jsx(_components.a, {\n          href: \"/features/me-network/channels/\",\n          children: \"channels\"\n        }), \" using devices.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"You can use them as small stand alone systems, or as systems designed to\\nenhance a larger \", _jsx(_components.a, {\n          href: \"/features/me-network/\",\n          children: \"ME Network\"\n        }), \", generally they are\\npowered via \", _jsx(ItemLink, {\n          id: \"quartz_fiber\"\n        }), \"\\nhowever they can also be powered via a \", _jsx(ItemLink, {\n          id: \"energy_acceptor\"\n        }), \" or even an energy cell if\\nyou don't want to keep it running for extend periods of time.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Smart Cables on Ad-Hoc networks will show the channel usage for every device on\\nthe network at all points on the network, this is different from how they will\\nshow usage if you are using a \", _jsx(ItemLink, {\n          id: \"controller\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Once an ad-hoc network exceeds 8 devices, the network will be unable to\\nallocate channels and everything will shutdown, you will either need to remove\\ndevices, or install a \", _jsx(ItemLink, {\n          id: \"controller\"\n        }), \" and to convert it to a\\nstandard network, instead of an ad-hoc network.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Ad Hoc Networks"}},"frontMatter":{"title":"Ad Hoc Networks"},"pagePath":"/features/me-network/ad-hoc-networks.md"},"__N_SSG":true}