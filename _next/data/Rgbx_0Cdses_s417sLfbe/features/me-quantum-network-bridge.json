{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    img: \"img\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {ItemLink} = _components;\n  if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"quantum-network-bridge\",\n      children: \"Quantum Network Bridge\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/large/quantum_network_bridge.png\",\n        alt: \"A Quantum Network Bridge\",\n        width: \"637\",\n        height: \"735\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A multiblock structure that connects 2 potentially distant network fragments\\ntogether. Created by crafting 8 \", _jsx(ItemLink, {\n        id: \"quantum_ring\"\n      }), \" and a \", _jsx(ItemLink, {\n        id: \"quantum_link\"\n      }), \" and placing the \", _jsx(ItemLink, {\n        id: \"quantum_link\"\n      }), \" in the center, and\\nsourrounding it in the 8 \", _jsx(ItemLink, {\n        id: \"quantum_ring\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each Quantum Network Bridge requires power to function. This\\npower must be provided from the network fragment it is attached to until the\\nbridge is linked; at which time power from either side will be available.\\nHowever if power is lost, connectivity will fail and power will be drained\\nfrom the side the bridge is on in attempt to restore connection.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the Quantum Network Bridge is powered, the various blue lights on the structure will turn on and glow.\\nThe Quantum Network Bridge requires 200 AE/t ( 100 EU/t, 400 RF/t )\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To establish a link between 2 Quantum Network Bridges, you must\\ncreate a pair of \", _jsx(ItemLink, {\n        id: \"quantum_entangled_singularity\"\n      }), \". One of\\neach will be placed inside of a particular connection. Each Bridge may only\\nconnect to one other bridge.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You might consider renaming your \", _jsx(ItemLink, {\n        id: \"quantum_entangled_singularity\"\n      }), \" to better\\nidentify the connection.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"checklist\",\n      children: \"Checklist\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Are both sides of the Quantum Network Bridge powered? The lights turn on if they are.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Are the matching pair of \", _jsx(ItemLink, {\n          id: \"quantum_entangled_singularity\"\n        }), \" in each bridge?\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Are both sides chunk-loaded?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Make sure you only have 1 controller, the other side of the bridge is still the same network.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Power and network connectivty must connect to the 4 edges, not the corners.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"ME Quantum Network Bridge"}},"frontMatter":{"title":"ME Quantum Network Bridge"},"pagePath":"/features/me-quantum-network-bridge.md"},"__N_SSG":true}