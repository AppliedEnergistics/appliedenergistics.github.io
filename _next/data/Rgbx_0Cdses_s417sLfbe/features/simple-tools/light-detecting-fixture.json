{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {RecipeFor} = _components;\n  if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Just like a daylight sensor uses nether quartz to detect daylight, this nether\\nquartz fixture outputs redstone level on any nearby light sources.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Outputs starting at light level 6 at redstone level 1 and goes up to light\\nlevel 15 redstone level 9.\"\n    }), \"\\n\", _jsx(RecipeFor, {\n      id: \"light_detector\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"categories":["Simple Tools/Misc"],"item_ids":["ae2:light_detector"],"title":"Light Detector"}},"frontMatter":{"categories":["Simple Tools/Misc"],"item_ids":["ae2:light_detector"],"title":"Light Detector"},"pagePath":"/features/simple-tools/light-detecting-fixture.md"},"__N_SSG":true}