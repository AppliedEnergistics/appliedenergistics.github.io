{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\"\n  }, _provideComponents(), props.components), {ItemLink, RecipeFor} = _components;\n  if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n  if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/large/fluix_block.png\",\n        alt: \"A picture of a fluix block.\",\n        width: \"375\",\n        height: \"369\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A Block of \", _jsx(ItemLink, {\n        id: \"fluix_crystal\"\n      }), \".\"]\n    }), \"\\n\", _jsx(RecipeFor, {\n      id: \"fluix_block\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Fluix","item_ids":["ae2:fluix_block"]}},"frontMatter":{"title":"Fluix","item_ids":["ae2:fluix_block"]},"pagePath":"/features/decorative-blocks/fluix.md"},"__N_SSG":true}