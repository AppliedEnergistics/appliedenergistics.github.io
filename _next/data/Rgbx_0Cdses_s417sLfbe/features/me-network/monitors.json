{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {ItemLink, RecipeFor} = _components;\n  if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n  if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"storage-monitor\",\n      children: \"Storage Monitor\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(ItemLink, {\n        id: \"storage_monitor\"\n      }), \" is a simple\\nway to see the current level of a specified item. There are several\\ninteractions to modify it.\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Action\"\n          }), _jsx(_components.th, {\n            children: \"Effect\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Right-click with item\"\n          }), _jsx(_components.td, {\n            children: \"Will display the current stored amount of that item if not locked.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Right-click with empty hand\"\n          }), _jsx(_components.td, {\n            children: \"Will reset the display if not locked.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Shift+Right-click with empty hand\"\n          }), _jsx(_components.td, {\n            children: \"Will toggle the lock.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Right-click with wrench\"\n          }), _jsx(_components.td, {\n            children: \"Will rotate the monitor if it is locked and on the ground or ceiling.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(RecipeFor, {\n      id: \"storage_monitor\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"conversion-monitor\",\n      children: \"Conversion Monitor\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(ItemLink, {\n        id: \"conversion_monitor\"\n      }), \" is the\\nupgraded version of the \", _jsx(ItemLink, {\n        id: \"storage_monitor\"\n      }), \". It adds the ability to\\ndirectly withdraw from or store items into the \", _jsx(_components.a, {\n        href: \"/features/me-network/\",\n        children: \"ME Network\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In addition to the storage monitor's interactions, conversion monitors support the following actions:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Action\"\n          }), _jsx(_components.th, {\n            children: \"Effect\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Left-click\"\n          }), _jsx(_components.td, {\n            children: \"Extracts a stack of the shown item into your inventory.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Right-click with item\"\n          }), _jsx(_components.td, {\n            children: \"Inserts the held item into the network.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Right-click with empty hand\"\n          }), _jsx(_components.td, {\n            children: \"Will insert all of the shown item from your inventory into the network.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(RecipeFor, {\n      id: \"conversion_monitor\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Storage Monitors","item_ids":["ae2:conversion_monitor","ae2:storage_monitor"]}},"frontMatter":{"title":"Storage Monitors","item_ids":["ae2:conversion_monitor","ae2:storage_monitor"]},"pagePath":"/features/me-network/monitors.md"},"__N_SSG":true}