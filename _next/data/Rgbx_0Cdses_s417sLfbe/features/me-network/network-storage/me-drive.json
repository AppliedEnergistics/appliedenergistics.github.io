{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {ItemLink, RecipeFor} = _components;\n  if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n  if (!RecipeFor) _missingMdxReference(\"RecipeFor\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/assets/large/me_drive.png\",\n        alt: \"A picture of an ME Drive.\",\n        width: \"354\",\n        height: \"378\"\n      }), \"A block designed to\\ndo one thing, store Storage Cells. This block holds 10 storage cells so you\\ncan tightly pack your storage into a very small space.\"]\n    }), \"\\n\", _jsx(ItemLink, {\n      id: \"drive\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"show their contents and the storage cell status on the front of the drive\\nface.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Red - Indicates the Storage Cell is Full.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Orange - Indicates the Storage Cell cannot hold any more types, but it can store more items.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Green - Indicates the cell can hold more types, or more items.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Black - Indicates there is no channel, or power is offline.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Its important to note, that without a \", _jsx(_components.a, {\n        href: \"/features/me-network/\",\n        children: \"ME Network\"\n      }), \"\\nthis block does nothing. Its only useful when combined with a way to input,\\nand output items, and requires 2 AE/t power to function, and additional power\\nfor each Storage Cell stored inside it.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(ItemLink, {\n        id: \"drive\"\n      }), \" requires a\\n\", _jsx(_components.a, {\n        href: \"/features/me-network/channels/\",\n        children: \"channel\"\n      }), \" to function.\"]\n    }), \"\\n\", _jsx(RecipeFor, {\n      id: \"drive\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"categories":["ME Network/Network Storage"],"item_ids":["ae2:drive"],"related":["Other Networked Storage","Storage Cells"],"title":"ME Drive"}},"frontMatter":{"categories":["ME Network/Network Storage"],"item_ids":["ae2:drive"],"related":["Other Networked Storage","Storage Cells"],"title":"ME Drive"},"pagePath":"/features/me-network/network-storage/me-drive.md"},"__N_SSG":true}