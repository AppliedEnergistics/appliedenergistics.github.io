{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\",\n    strong: \"strong\",\n    img: \"img\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {ItemLink} = _components;\n  if (!ItemLink) _missingMdxReference(\"ItemLink\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This page describes how to use the debug card to troubleshoot some issues.\\nYou probably don't need to read this unless you are an AE2 developer / addon developer,\\nor we requested that you read it to help troubleshoot an issue, or you are curious about how AE2 works internally.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"setup\",\n      children: \"Setup\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You need to enable \", _jsx(_components.code, {\n        children: \"unsupportedDeveloperTools\"\n      }), \" in the AE2 config.\\nBe very careful with some of these, there is a reason they are behind a config option containing \", _jsx(_components.strong, {\n        children: \"unsupported\"\n      }), \".\\nThe \", _jsx(ItemLink, {\n        id: \"debug_card\"\n      }), \" item is reasonably safe to use, and you should give one to yourself and hold it in your main hand.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Also make sure that have installed WTHIT (Fabric) or Jade (Forge).\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When looking at an AE2 block or part, you should see something that looks like this:\\n\", _jsx(_components.img, {\n        src: \"/assets/large/debug-card-display.png\",\n        alt: \"A picture of debug card display.\",\n        width: \"959\",\n        height: \"1071\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"node-connectivity\",\n      children: \"Node connectivity\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.strong, {\n        children: \"Node Exposed\"\n      }), \" indicator highlights from which sides this device allows external connections.\\nThat should match what is visible in world, otherwise it's a bug.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"tick-rates\",\n      children: \"Tick rates\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To minimize lag, most ticking AE2 devices sleep when they have no work to do, and then they slowly \\\"wake up\\\" over time.\\nThat is why import busses and export busses take a while to reach their maximum speed.\\nThis information is visible in the debug information display:\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"tick-status\",\n      children: \"Tick Status\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Sleeping\"\n        }), \": the device is currently sleeping, i.e. not going to do anything until it is awakened.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Awake\"\n        }), \": the device is not sleeping, i.e. it should have some work scheduled.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Alertable\"\n        }), \": the device is allowed to go from sleeping to awake if it wants.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Queued\"\n        }), \": the device definitely has some work scheduled for later.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"If a device is awake, but not queued, it's a bug!\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"tick-rate\",\n      children: \"Tick Rate\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The \\\"current speed\\\" of the device, i.e. how many game ticks (1 tick = 0.05s) it waits before two actions.\\nThis should go down as the device wakes up, and then back up when the device has no work to do.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"last\",\n      children: \"Last\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The last time the device was ticked.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"If a device is awake, but the last tick happened longer ago than the tick rate should allow, it's a bug!\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Debug Card","sidenav_icon":"debug_card","item_ids":["ae2:debug_card"]}},"frontMatter":{"title":"Debug Card","sidenav_icon":"debug_card","item_ids":["ae2:debug_card"]},"pagePath":"/debug-card.md"},"__N_SSG":true}