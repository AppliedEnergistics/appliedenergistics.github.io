{"version":3,"file":"component---src-pages-features-me-network-network-hid-me-pattern-terminal-md-f90f013ff5f05dbbb2d7.js","mappings":"gRAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAWL,EAAc,YACzBM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,kDAAoC,QAACP,EAAD,CAAUQ,GAAG,wCAAwCD,QAAQ,aAAjG,wBACA,QAACP,EAAD,CAAUQ,GAAG,oCAAoCD,QAAQ,aAJpD,UAIgF,QAACP,EAAD,CAAUQ,GAAG,sCAAsCD,QAAQ,aAJ3I,KAKL,kkBAQA,6LAGA,oVAKA,wKAEA,QAACN,EAAD,CAAWO,GAAG,uCAAuCD,QAAQ,eAKjEF,EAAWI,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/features/me-network/network-hid/me-pattern-terminal.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst RecipeFor = makeShortcode(\"RecipeFor\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`A specialized version of the `}<ItemLink id=\"appliedenergistics2:crafting_terminal\" mdxType=\"ItemLink\"></ItemLink>{` designed to encode`}</p>\n    <ItemLink id=\"appliedenergistics2:blank_pattern\" mdxType=\"ItemLink\"></ItemLink> into <ItemLink id=\"appliedenergistics2:encoded_pattern\" mdxType=\"ItemLink\"></ItemLink>.\n    <p>{`Lets you browse the contents of your network like other terminals, but also\ncontains a area for designing patterns. There are two modes for pattern\nencoding. Crafting Patterns, and Processing Patterns. Processing patterns are\ndesigned for use with machines that do not use standard crafting recipes; such\nas furances, or other machines. To select between modes, click the button to\nthe right of the interface; when it shows a standard crafting table, it will\ncreate Crafting Patterns, and when it shows a furnace, it will create\nProcessing Patterns.`}</p>\n    <p>{`For Crafting Patterns (\"Crafts...\"), you specify the input crafting materials\non a standard 3x3 crafting grid, and the output materials are determined\nautomatically.`}</p>\n    <p>{`For Processing Patterns (\"Creates...\"), you specify the input materials and\noutput materials, including quantity, by placing stacks of items in the\ninterface. If a processing operation is not guaranteed to succeed (such as\nsecondary products from some machines), it will not work correctly as a\nProcessing Pattern.`}</p>\n    <p>{`When designing crafting patterns you can click the output to extract a crafted\nitem as long as you have the materials required to craft the item.`}</p>\n    <RecipeFor id=\"appliedenergistics2:pattern_terminal\" mdxType=\"RecipeFor\"></RecipeFor>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","ItemLink","RecipeFor","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","isMDXComponent"],"sourceRoot":""}