{"version":3,"file":"component---src-pages-features-me-network-powered-machines-molecular-assembler-md-22e07b44f1090bcecab4.js","mappings":"gRAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAWL,EAAc,YACzBM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,6GACQ,QAACP,EAAD,CAAUQ,GAAG,iCAAiCD,QAAQ,aAD9D,8CAGA,+FACA,0CACA,mCAAqB,QAACP,EAAD,CAAUQ,GAAG,sCAAsCD,QAAQ,aAAhF,4GAGA,kQAIA,yCACA,8BAAgB,QAACP,EAAD,CAAUQ,GAAG,sCAAsCD,QAAQ,aAA3E,gDACkC,QAACP,EAAD,CAAUQ,GAAG,qCAAqCD,QAAQ,aAD5F,oDAEe,aAAGE,WAAW,IACzB,KAAQ,8BADG,gBAFf,MAKA,kEAAoD,kBAAQA,WAAW,KAAnB,OAApD,gBAA2G,QAACT,EAAD,CAAUQ,GAAG,sCAAsCD,QAAQ,aAAtK,uCAEA,QAACN,EAAD,CAAWO,GAAG,0CAA0CD,QAAQ,eAKpEF,EAAWK,gBAAiB","sources":["webpack://applied-energistics-2/./src/pages/features/me-network/powered-machines/molecular-assembler.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/appliedenergistics.github.io/appliedenergistics.github.io/src/templates/page.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ItemLink = makeShortcode(\"ItemLink\");\nconst RecipeFor = makeShortcode(\"RecipeFor\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The assembler is a powered machine which crafts items, it can be upgraded by\ninserting `}<ItemLink id=\"appliedenergistics2:speed_card\" mdxType=\"ItemLink\"></ItemLink>{` into it;\nonce upgraded it is very fast.`}</p>\n    <p>{`Functions in one of two modes, single pattern mode or interface fed mode.`}</p>\n    <h3>{`Single Pattern Mode`}</h3>\n    <p>{`Uses a single `}<ItemLink id=\"appliedenergistics2:encoded_pattern\" mdxType=\"ItemLink\"></ItemLink>{`\n(must be a crafting recipe) inserted into the assembler to craft an item\nwithout a crafting network.`}</p>\n    <p>{`This makes it useful in stand alone setups or in configurations where it can\nbe fed by other mods and even chained together to to craft a final output.\nItems will be accepted from any side and exported into any available\ninventories.`}</p>\n    <h3>{`Interface Fed Mode`}</h3>\n    <p>{`Uses the `}<ItemLink id=\"appliedenergistics2:encoded_pattern\" mdxType=\"ItemLink\"></ItemLink>{` (must\nbe a crafting recipe) from attached `}<ItemLink id=\"appliedenergistics2:item_interface\" mdxType=\"ItemLink\"></ItemLink>{` to craft items when they are\nrequested by the `}<a parentName=\"p\" {...{\n        \"href\": \"../Crafting-CPU/index.html\"\n      }}>{`Crafting CPU`}</a>{`.`}</p>\n    <p>{`Note, this mode requires that the assembler _`}<strong parentName=\"p\">{`not`}</strong>{` _contain a `}<ItemLink id=\"appliedenergistics2:encoded_pattern\" mdxType=\"ItemLink\"></ItemLink>{`; the pattern slot must be\nempty.`}</p>\n    <RecipeFor id=\"appliedenergistics2:molecular_assembler\" mdxType=\"RecipeFor\"></RecipeFor>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","ItemLink","RecipeFor","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","id","parentName","isMDXComponent"],"sourceRoot":""}